// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Trans_EM_rcpp
Rcpp::List Trans_EM_rcpp(const Eigen::VectorXd Y, const Eigen::VectorXd CI, const Eigen::MatrixXd X, double RHO);
RcppExport SEXP _AssoTest_Trans_EM_rcpp(SEXP YSEXP, SEXP CISEXP, SEXP XSEXP, SEXP RHOSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type CI(CISEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type RHO(RHOSEXP);
    rcpp_result_gen = Rcpp::wrap(Trans_EM_rcpp(Y, CI, X, RHO));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_AssoTest_Trans_EM_rcpp", (DL_FUNC) &_AssoTest_Trans_EM_rcpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_AssoTest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
